- name: Search for incident using host instead of instance
  hosts: localhost
  tasks:
  - name: Update /etc/resolv.conf file
    shell: echo "nameserver 8.8.8.8" >> /etc/resolv.conf;/usr/bin/pip3 install jmespath

  - snow_record_find:
      username: "{{ Username }}"
      password: "{{ Password }}"
      host: dev49922.service-now.com
      table: incident
      query:
        AND:
          equals:
            #active: "True"
            #type: "standard"
            assignment_group: 8a5055c9c61122780043563ef53438e3
      # return_fields:
      #   - number
      #   - opened_at
      #   - sys_id
    register: snow_incidents
    
  - debug: 
      msg: "{{ snow_incidents.record }}"

  # - name: Display incident information
  #   debug:
  #     msg: "{{ item.number }} - {{ item.short_description }}"
  #   loop: "{{ snow_incidents.record }}"

   # - name: Business Card
   #   debug: msg="{{ snow_incidents.json | json_query(jmesquery)}}"
   #   vars:
   #     jmesquery: "[? name==`Leanne Graham`].{Name: name, Email: email, Phone: phone, CompanyName: company.name, WebSite: website, City: address.city}"

  # - name: Filter open state incidents
  #   set_fact:
  #     #open_incidents: "{{ snow_incidents.record | json_query('[?state == "1"].{number: number, short_description: short_description}') }}"
  #     #open_incidents: "{{ snow_incidents | json_query('record[?state==`2`].{number: number, short_description: short_description}') }}"
  #     open_incidents: "{{ snow_incidents.record | json_query('[?incident_state == `1`]') }}"
  
  - name: Business Card
    debug: msg="{{ snow_incidents.record.json | json_query(jmesquery)}}"
    vars:
      jmesquery: "[? state==`1`].{number: number, short_description: short_description}"
      #jmesquery: "[? name==`Leanne Graham`].{Name: name, Email: email, Phone: phone, CompanyName: company.name, WebSite: website, City: address.city}"
      
  # - name: Filter open state incidents
  #   debug:
  #     #open_incidents: "{{ snow_incidents.record | json_query('[?state == "1"].{number: number, short_description: short_description}') }}"
  #     #open_incidents: "{{ snow_incidents | json_query('record[?state==`2`].{number: number, short_description: short_description}') }}"
  #     msg: open_incidents: "{{ snow_incidents.record.json  | json_query('[? incident_state == `1`]') }}"

  # - name: print open_incidents
  #   debug:
  #     msg: open_incidents - "{{ open_incidents }}"
       
  # - name: setDomainName
  #   set_fact:
  #     domain_name: "{{ snow_incidents | json_query(jmesquery) }}"
  #   vars:
  #     jmesquery: 'record[? state==`1`].number'

  # - name: Display incident information
  #   debug:
  #     msg: "{{ item.number }} - {{ item.short_description }}"
  #   loop: "{{ open_incidents }}"
  
  

